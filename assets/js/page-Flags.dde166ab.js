(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{494:function(e,t,a){"use strict";a.r(t);var s=a(1),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[e._v("#")]),e._v(" Flags")]),e._v(" "),a("p",[e._v("Flags allow for very specific control of actions by Players or Groups both inside and outside of claims."),a("br"),e._v("\nDefault Flags can be overridden or per claim specific Flags can be used.")]),e._v(" "),a("p",[e._v("Using "),a("code",[e._v("/cf")]),e._v(" Provides you a UI to edit the default flags for the claim you are in.")]),e._v(" "),a("p",[e._v("Flags do not apply to the owner of a claim, this includes Admins in Wilderness or Admin claims."),a("br"),e._v("\nUse overrides if you want to force flags on all users in a claim type.")]),e._v(" "),a("p",[e._v("Note: Flag commands are just wrappers around LuckPerm's API. Everything set via GD flags, can be set directly using LP. See "),a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#usage-with-luckperms",target:"_blank",rel:"noopener noreferrer"}},[e._v("Usage with LuckPerms"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#commands",target:"_blank",rel:"noopener noreferrer"}},[e._v("Commands"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#arguments",target:"_blank",rel:"noopener noreferrer"}},[e._v("Arguments"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#commandlist",target:"_blank",rel:"noopener noreferrer"}},[e._v("Commandlist"),a("OutboundLink")],1)])])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#usage-examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("Usage Examples"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#usage-with-luckperms",target:"_blank",rel:"noopener noreferrer"}},[e._v("Usage with LuckPerms"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefender/wiki/Flags#available-flags",target:"_blank",rel:"noopener noreferrer"}},[e._v("Available Flags"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"contexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contexts"}},[e._v("#")]),e._v(" Contexts")]),e._v(" "),a("p",[e._v("All flags require one or more contexts when applied as a permission in LuckPerms."),a("br"),e._v("\nSee https://github.com/bloodmc/GriefDefender/wiki/Contexts on what contexts you can use and how they work.")]),e._v(" "),a("h2",{attrs:{id:"commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[e._v("#")]),e._v(" Commands")]),e._v(" "),a("h3",{attrs:{id:"arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[e._v("#")]),e._v(" Arguments")]),e._v(" "),a("p",[a("code",[e._v("<mandatory> [optional]")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Arguments")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("<flag>")])]),e._v(" "),a("td",[e._v("The action or event to manage "),a("a",{attrs:{href:"#available-flags"}},[a("code",[e._v("flag")])])])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("<target>")])]),e._v(" "),a("td",[e._v("What is to be affected by the action ie. "),a("code",[e._v("minecraft:dirt")]),e._v(". Use "),a("code",[e._v("any")]),e._v(" or "),a("code",[e._v("modid:any")]),e._v(" as wildcard.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("<value>")])]),e._v(" "),a("td",[e._v("Whether to allow, deny or remove the flag "),a("code",[e._v("false\\|undefined\\|true")]),e._v(" , instead of "),a("code",[e._v("undefined")]),e._v(" you can use "),a("code",[e._v("0")])])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("[key=value]")])]),e._v(" "),a("td",[e._v("Optional current contexts:"),a("br"),a("code",[e._v("override=type")]),e._v(" will apply it to all claims of that type."),a("br"),a("code",[e._v("default")]),e._v(" will set as default for type you're standing in so all newly created claims will get that flag"),a("br"),a("code",[e._v("source")]),e._v(" what triggers the flag ie. "),a("code",[e._v("minecraft:player")]),a("br"),a("code",[e._v("used_item")]),e._v(" The used item of player"),a("br"),e._v("Ex. "),a("code",[e._v("/cf entity-damage pig false used_item=diamond_sword override=basic")]),e._v(" This would deny damage to a pig only when a diamond sword is used in a basic claim")])])])]),e._v(" "),a("h3",{attrs:{id:"commandlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commandlist"}},[e._v("#")]),e._v(" Commandlist")]),e._v(" "),a("hr"),e._v(" "),a("h4",{attrs:{id:"gd-claim-debug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gd-claim-debug"}},[e._v("#")]),e._v(" "),a("code",[e._v("/gd claim debug")])]),e._v(" "),a("p",[a("strong",[e._v("Aliases")]),e._v(": "),a("code",[e._v("cfd|claimflagdebug")])]),e._v(" "),a("p",[e._v("Toggles claim flag debug mode. Used to test flags in claims as a user with no permissions.")]),e._v(" "),a("hr"),e._v(" "),a("h4",{attrs:{id:"gd-flag-claim-flag-target-value-contexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gd-flag-claim-flag-target-value-contexts"}},[e._v("#")]),e._v(" "),a("code",[e._v("/gd flag claim [<flag> <target> <value> [contexts]")])]),e._v(" "),a("p",[a("strong",[e._v("Aliases")]),e._v(": "),a("code",[e._v("cf|claimflag")])]),e._v(" "),a("p",[e._v("Edits flags, can apply to claim types or specific claims.")]),e._v(" "),a("p",[e._v("Note: reason is only supported in Wilderness claim when using override context to ban usage in ALL claim types.")]),e._v(" "),a("hr"),e._v(" "),a("h4",{attrs:{id:"gd-flag-group-group-flag-target-value-contexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gd-flag-group-group-flag-target-value-contexts"}},[e._v("#")]),e._v(" "),a("code",[e._v("/gd flag group <group> [<flag> <target> <value> [contexts]")])]),e._v(" "),a("p",[a("strong",[e._v("Aliases")]),e._v(": "),a("code",[e._v("cfg|claimflaggroup")])]),e._v(" "),a("p",[e._v("Edits flags that apply to a group.")]),e._v(" "),a("hr"),e._v(" "),a("h4",{attrs:{id:"gd-flag-player-player-flag-target-value-contexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gd-flag-player-player-flag-target-value-contexts"}},[e._v("#")]),e._v(" "),a("code",[e._v("/gd flag player <player> [<flag> <target> <value> [contexts]")])]),e._v(" "),a("p",[a("strong",[e._v("Aliases")]),e._v(": "),a("code",[e._v("cfp|claimflagplayer")])]),e._v(" "),a("p",[e._v("Edits flags that apply to a player.")]),e._v(" "),a("hr"),e._v(" "),a("h4",{attrs:{id:"gd-flag-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gd-flag-reset"}},[e._v("#")]),e._v(" "),a("code",[e._v("/gd flag reset")])]),e._v(" "),a("p",[a("strong",[e._v("Aliases")]),e._v(": "),a("code",[e._v("cfr|claimflagreset")])]),e._v(" "),a("p",[e._v("Resets a claim to flag defaults, the defaults can be edited in the configs.")]),e._v(" "),a("h2",{attrs:{id:"usage-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-examples"}},[e._v("#")]),e._v(" Usage Examples")]),e._v(" "),a("p",[e._v("Flags can be applied to Players, Groups with or without a specific claim context. They can also be applied to all Basic|Wilderness|Admin Claims directly. More examples can be found in-game, just run "),a("code",[e._v("/cf")]),e._v(" and hover over the different flags!")]),e._v(" "),a("h3",{attrs:{id:"example-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1"}},[e._v("#")]),e._v(" Example 1")]),e._v(" "),a("p",[e._v("To prevent any source from breaking lime wool blocks, in the claim you are standing in."),a("br"),e._v(" "),a("code",[e._v("/cf block-break minecraft:wool.5 false")])]),e._v(" "),a("p",[e._v("Specifying no modid will always default to minecraft. The format for blocks is "),a("code",[e._v("modid:blockid.meta")]),e._v(", if meta sn't specified 0 is used.")]),e._v(" "),a("h3",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[e._v("#")]),e._v(" Example 2")]),e._v(" "),a("p",[e._v("To allow Pixelmon Pokeballs to interact with any blocks in all basic claims, has to be run while standing in a basic claim.")]),e._v(" "),a("p",[a("code",[e._v("/cf projectile-impact-block any true source=pixelmon:occupiedpokeball override=basic")])]),e._v(" "),a("h3",{attrs:{id:"example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[e._v("#")]),e._v(" Example 3")]),e._v(" "),a("p",[e._v('To prevent only players from using portals that are in the group "Jailed" in all admin claims. Has to execute while standing in an admin claim.')]),e._v(" "),a("p",[a("code",[e._v("/cfg Jailed portal-use any false source=minecraft:player override=admin")])]),e._v(" "),a("h3",{attrs:{id:"example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[e._v("#")]),e._v(" Example 4")]),e._v(" "),a("p",[e._v('To prevent a player called "notch" from rightlicking any bed, in the claim you are standing in.')]),e._v(" "),a("p",[a("code",[e._v("/cfp notch interact-block-secondary minecraft:bed false")])]),e._v(" "),a("h3",{attrs:{id:"example-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-5"}},[e._v("#")]),e._v(" Example 5")]),e._v(" "),a("p",[e._v("To prevent pixelmon's command '/shop select' from being run, in the claim you are standing in.")]),e._v(" "),a("p",[a("code",[e._v("/cf command-execute pixelmon:shop[select] false")])]),e._v(" "),a("h3",{attrs:{id:"example-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-6"}},[e._v("#")]),e._v(" Example 6")]),e._v(" "),a("p",[e._v("To prevent a specific item to be right-clicked on an entity.")]),e._v(" "),a("p",[a("code",[e._v("/cf interact-entity-secondary item_id entity_id false")])]),e._v(" "),a("p",[e._v("Note: Use "),a("code",[e._v("interact-entity-primary")]),e._v(" for left-click")]),e._v(" "),a("h3",{attrs:{id:"example-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-7"}},[e._v("#")]),e._v(" Example 7")]),e._v(" "),a("p",[e._v("To prevent a specific item to be right-clicked on a block.")]),e._v(" "),a("p",[a("code",[e._v("/cf interact-block-secondary item_id block_id false")])]),e._v(" "),a("p",[e._v("Note: Use "),a("code",[e._v("interact-block-primary")]),e._v(" for left-click")]),e._v(" "),a("h2",{attrs:{id:"usage-with-luckperms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-with-luckperms"}},[e._v("#")]),e._v(" Usage with LuckPerms")]),e._v(" "),a("h3",{attrs:{id:"example-1-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1-2"}},[e._v("#")]),e._v(" Example 1")]),e._v(" "),a("p",[e._v("Disable animal damage in all basic claim's for group "),a("code",[e._v("starters")])]),e._v(" "),a("p",[e._v("GD:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/cfg starters entity-damage #animal false default=basic\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("LP:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/lp group starters permission set griefdefender.flag.entity-damage false gd_claim_default=basic target=#animal\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"available-flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#available-flags"}},[e._v("#")]),e._v(" Available Flags")]),e._v(" "),a("p",[e._v("All Info provided inside () will be one of the examples.")]),e._v(" "),a("p",[a("strong",[a("em",[e._v("The most current list will always be available "),a("a",{attrs:{href:"https://github.com/bloodmc/GriefDefenderAPI/blob/master/src/main/java/com/griefdefender/api/permission/flag/Flags.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")])])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("block-break")]),e._v(" - Use to manage block breaking (Allowing to break a Dirt Block)")]),e._v(" "),a("li",[a("strong",[e._v("block-grow")]),e._v(" - Use to manage block growth")]),e._v(" "),a("li",[a("strong",[e._v("block-modify")]),e._v(" - Used to manage block modifications such as ice melting.")]),e._v(" "),a("li",[a("strong",[e._v("block-place")]),e._v(" - Use to manage block placing (Allowing to place a Dirt Block)")]),e._v(" "),a("li",[a("strong",[e._v("block-spread")]),e._v(" - Use to manage things spreading from one block to another(Fire spread, vine growth etc)")]),e._v(" "),a("li",[a("strong",[e._v("command-execute")]),e._v(" - Use to manage execution of commands (Doing /msg inside claim)")]),e._v(" "),a("li",[a("strong",[e._v("enter-claim")]),e._v(" - Use to manage entering claims (Not Allowing a Random Player to walk into the Claim)")]),e._v(" "),a("li",[a("strong",[e._v("collide-block")]),e._v(" - Use to manage collisions with blocks (Colliding with pressure plates)")]),e._v(" "),a("li",[a("strong",[e._v("collide-entity")]),e._v(" - Use to manage collisions with entities (Colliding with a Pixelmon)")]),e._v(" "),a("li",[a("strong",[e._v("entity-damage")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage damage taken by entities (A Zombie hurting Random Player)")]),e._v(" "),a("li",[a("strong",[e._v("entity-riding")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage riding of entities (Riding Horses,Pixelmon,Boats,etc)")]),e._v(" "),a("li",[a("strong",[e._v("entity-spawn")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage entity spawning (This includes any spawn into the world including chunk spawns.)")]),e._v(" "),a("li",[a("strong",[e._v("entity-teleport-from")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage entity teleporting from claim (An Enderman teleporting from inside the claim)")]),e._v(" "),a("li",[a("strong",[e._v("entity-teleport-to")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage entity teleporting inside claim (An Enderman teleporting to inside the claim)")]),e._v(" "),a("li",[a("strong",[e._v("exit-claim")]),e._v(" - Use to manage exiting claims (Not allowing Random Player to walk out of claim)")]),e._v(" "),a("li",[a("strong",[e._v("explosion-block")]),e._v(" - Use to manage explosions affecting blocks")]),e._v(" "),a("li",[a("strong",[e._v("explosion-entity")]),e._v(" - Use to manage explosions affecting entities")]),e._v(" "),a("li",[a("strong",[e._v("interact-block-primary")]),e._v(" - Use to manage left-click interaction with blocks (Hitting a Dragon Egg)")]),e._v(" "),a("li",[a("strong",[e._v("interact-block-secondary")]),e._v(" - Use to manage right-click interaction with blocks (Opening a Pixelmon PC)")]),e._v(" "),a("li",[a("strong",[e._v("interact-entity-primary")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage left-click interaction with entities (Hitting a Chicken to deal damage)")]),e._v(" "),a("li",[a("strong",[e._v("interact-entity-secondary")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage right-click interaction with entities (Feeding seeds to Chicken)")]),e._v(" "),a("li",[a("strong",[e._v("interact-inventory")]),e._v(" - Use to manage interaction with inventories (Being able to open Chest)")]),e._v(" "),a("li",[a("strong",[e._v("interact-inventory-click")]),e._v(" - Use to manage interaction when clicking slots in inventory. (Used to block crafting)")]),e._v(" "),a("li",[a("strong",[e._v("interact-item-primary")]),e._v(" - Use to manage left-click interaction with items ()")]),e._v(" "),a("li",[a("strong",[e._v("interact-item-secondary")]),e._v(" - Use to manage right-click interaction with items ()")]),e._v(" "),a("li",[a("strong",[e._v("item-drop")]),e._v(" - Use to manage Players dropping items (Random Player not being able to drop a dirt block)")]),e._v(" "),a("li",[a("strong",[e._v("item-pickup")]),e._v(" - Use to manage picking up dropped items (Random Player not being to pick up a dropped dirt block)")]),e._v(" "),a("li",[a("strong",[e._v("item-spawn")]),e._v(" - Use to manage spawning of items from blocks or items in the world (Like Pixelmon Gift Box)")]),e._v(" "),a("li",[a("strong",[e._v("item-use")]),e._v(" - Use to manage use of items (Random player using potions|Ender pearls|Exp all)")]),e._v(" "),a("li",[a("strong",[e._v("liquid-flow")]),e._v(" - Use to manage liquid flow (Control the flow of water or lava flow)")]),e._v(" "),a("li",[a("strong",[e._v("portal-use")]),e._v(" - Use to manage use portals (Control the use of Nether portals)")]),e._v(" "),a("li",[a("strong",[e._v("projectile-impact-block")]),e._v(" - Use to manage a projectile hitting a block (When an arrow hits a dirt block)")]),e._v(" "),a("li",[a("strong",[e._v("projectile-impact-entity")]),a("a",{attrs:{href:"#note1"}},[a("sup",[e._v("1")])]),e._v(" - Use to manage a projectile hitting a entity (When an arrow hits a Pixelmon|Mobs)")])]),e._v(" "),a("h2",{attrs:{id:"custom-gd-context-group-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-gd-context-group-types"}},[e._v("#")]),e._v(" Custom GD context group types")]),e._v(" "),a("p",[e._v("GD provides a few context group types that can be used to specify all of a type of something, for instance all monsters.")]),e._v(" "),a("blockquote",[a("p",[e._v("**Note: Starting with MC versions 1.14+, GD integrates with vanilla's tag system. It is highly recommended to use the vanilla tag system. See https://minecraft.gamepedia.com/Tag for more information and https://minecraft.gamepedia.com/Tutorials/Creating_a_data_pack for more info.")])]),e._v(" "),a("h3",{attrs:{id:"available-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#available-keys"}},[e._v("#")]),e._v(" Available Keys")]),e._v(" "),a("ul",[a("li",[e._v("#any")]),e._v(" "),a("li",[e._v("#ambient")]),e._v(" "),a("li",[e._v("#animal")]),e._v(" "),a("li",[e._v("#aquatic")]),e._v(" "),a("li",[e._v("#crops")]),e._v(" "),a("li",[e._v("#food")]),e._v(" "),a("li",[e._v("#hanging")]),e._v(" "),a("li",[e._v("#monster")]),e._v(" "),a("li",[e._v("#pet")]),e._v(" "),a("li",[e._v("#vehicle")])]),e._v(" "),a("h3",{attrs:{id:"example-1-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1-3"}},[e._v("#")]),e._v(" Example 1")]),e._v(" "),a("p",[e._v("To prevent all monsters from entering admin claims by default."),a("br"),e._v(" "),a("code",[e._v("/cf enter-claim #monster false default=admin")]),a("br"),e._v("\nor"),a("br"),e._v(" "),a("code",[e._v("/cf enter-claim false default=admin target=#monster")])]),e._v(" "),a("h3",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[e._v("#")]),e._v(" Notes")]),e._v(" "),a("p",[a("a",{attrs:{name:"note1"}},[a("sup",[e._v("1")])]),e._v(" Entity type ("),a("code",[e._v("modid:monster|aquatic|ambient|animal")]),e._v(") may also be used to target all entities of that type from a specific mod.")]),e._v(" "),a("h2",{attrs:{id:"flag-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag-control"}},[e._v("#")]),e._v(" Flag Control")]),e._v(" "),a("p",[e._v("The flag control section lets you enable/disable flag functionality on a per-flag basis. By default, all flags are enabled. If you have no use for a specific flag, set the flag to false in this section.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Controls which flags are enabled.\n# Note: Disabling a flag will cause GD to bypass all functionality for it.\n# Note: If you want full protection, it is recommended to keep everything enabled.\nflag-control {\n    block-break=true\n    block-grow=true\n    block-modify=true\n    block-place=true\n    block-spread=true\n    collide-block=true\n    collide-entity=true\n    command-execute=true\n    command-execute-pvp=true\n    enter-claim=true\n    entity-chunk-spawn=true\n    entity-damage=true\n    entity-riding=true\n    entity-spawn=true\n    entity-teleport-from=true\n    entity-teleport-to=true\n    exit-claim=true\n    explosion-block=true\n    explosion-entity=true\n    interact-block-primary=true\n    interact-block-secondary=true\n    interact-entity-primary=true\n    interact-entity-secondary=true\n    interact-inventory=true\n    interact-inventory-click=true\n    interact-item-primary=true\n    interact-item-secondary=true\n    inventory-item-move=true\n    item-drop=true\n    item-pickup=true\n    item-spawn=true\n    item-use=true\n    leaf-decay=true\n    liquid-flow=true\n    portal-use=true\n    projectile-impact-block=true\n    projectile-impact-entity=true\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br")])])])}),[],!1,null,null,null);t.default=i.exports}}]);